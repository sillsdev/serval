syntax = "proto3";

package serval.translation.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "Protos/serval/engine/v1/engine.proto";

service TranslationEngineApi {
    rpc Translate(TranslateRequest) returns (TranslateResponse);
    rpc GetWordGraph(GetWordGraphRequest) returns (GetWordGraphResponse);
    rpc TrainSegmentPair(TrainSegmentPairRequest) returns (google.protobuf.Empty);
    rpc GetModelDownloadUrl(GetModelDownloadUrlRequest) returns (GetModelDownloadUrlResponse);
    rpc GetLanguageInfo(GetLanguageInfoRequest) returns (GetLanguageInfoResponse);
}

message CreateEngineParameters {
    optional bool is_model_persisted = 1;
}

message CreateEngineResults {
    bool is_model_persisted = 1;
}

message TranslateRequest {
    string engine_type = 1;
    string engine_id = 2;
    string segment = 3;
    int32 n = 4;
}

message TranslateResponse {
    repeated TranslationResult results = 1;
}

message GetWordGraphRequest {
    string engine_type = 1;
    string engine_id = 2;
    string segment = 3;
}

message GetWordGraphResponse {
    WordGraph word_graph = 1;
}

message TrainSegmentPairRequest {
    string engine_type = 1;
    string engine_id = 2;
    string source_segment = 3;
    string target_segment = 4;
    bool sentence_start = 5;
}

message GetModelDownloadUrlRequest {
    string engine_type = 1;
    string engine_id = 2;
}

message GetModelDownloadUrlResponse {
    string url = 1;
    int32 model_revision = 2;
    google.protobuf.Timestamp expires_at = 3;
}

message GetLanguageInfoRequest {
    string engine_type = 1;
    string language = 2;
}

message GetLanguageInfoResponse {
    bool is_native = 3;
    optional string internal_code = 1;
}

message Phrase {
    int32 source_segment_start = 1;
    int32 source_segment_end = 2;
    int32 target_segment_cut = 3;
}

message TranslationSources {
    repeated TranslationSource values = 1;
}

message TranslationResult {
    string translation = 1;
    repeated string source_tokens = 2;
    repeated string target_tokens = 3;
    repeated double confidences = 4;
    repeated TranslationSources sources = 5;
    repeated engine.v1.AlignedWordPair alignment = 6;
    repeated Phrase phrases = 7;
}

message WordGraphArc {
    int32 prev_state = 1;
    int32 next_state = 2;
    double score = 3;
    repeated string target_tokens = 4;
    repeated double confidences = 5;
    int32 source_segment_start = 6;
    int32 source_segment_end = 7;
    repeated engine.v1.AlignedWordPair alignment = 8;
    repeated TranslationSources sources = 9;
}

message WordGraph {
    repeated string source_tokens = 1;
    double initial_state_score = 2;
    repeated int32 final_states = 3;
    repeated WordGraphArc arcs = 4;
}

message TranslationCorpus {
    string id = 1;
    string source_language = 2;
    string target_language = 3;
    bool train_on_all = 4;
    bool pretranslate_all = 5;
    map<string, engine.v1.ScriptureChapters> train_on_chapters = 6;
    map<string, engine.v1.ScriptureChapters> pretranslate_chapters = 7;
    repeated string train_on_text_ids = 8;
    repeated string pretranslate_text_ids = 9;
    repeated engine.v1.CorpusFile source_files = 10;
    repeated engine.v1.CorpusFile target_files = 11;
}

enum TranslationSource {
    TRANSLATION_SOURCE_PRIMARY = 0;
    TRANSLATION_SOURCE_SECONDARY = 1;
    TRANSLATION_SOURCE_HUMAN = 2;
}
